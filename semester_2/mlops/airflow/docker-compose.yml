x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__LOGGING__LOGGING_LEVEL=INFO
    - AIRFLOW__WEBSERVER__DEFAULT_USER=airflow
    - AIRFLOW__WEBSERVER__DEFAULT_PASSWORD=airflow
    - MLFLOW_TRACKING_URI=http://mlflow:5000
    - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    - AWS_ACCESS_KEY_ID=admin
    - AWS_SECRET_ACCESS_KEY=admin123

  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./.env:/opt/airflow/.env
  depends_on:
    - postgres
  networks:
      - mlops-net

services:
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mlops-net

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "airflow db migrate && airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email airflow@example.com"
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - "8080:8080"
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data --console-address ":9001"
    volumes:
      - ../minio/data:/data
    networks:
      - mlops-net
  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set local http://minio:9000 admin admin123;
        mc mb -p local/training-data || true;
        mc mb -p local/model || true;
        mc mb -p local/mlflow || true;
        mc ls local;
        exit 0;"
    networks:
      - mlops-net

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mlops-net

  postgres-mlflow:
    image: postgres:12
    container_name: postgres-mlflow
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mlflow_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_mlflow:/var/lib/postgresql/data
    networks:
      - mlops-net

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow
    depends_on:
      - postgres-mlflow
      - minio
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: admin123
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow_data:/mlflow
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://postgres:postgres@postgres-mlflow:5432/mlflow_db
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
      --port 5000
    networks:
      - mlops-net

volumes:
  minio_data:
  postgres_data:
  mlflow_data:
  postgres_data_mlflow:

networks:
  mlops-net:
    external: true
